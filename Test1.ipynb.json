{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "\n",
    "df_sites = pd.read_excel('https://notebooks.gesis.org/binder/jupyter/user/rahuldataviz-winner-b6i0kv4h/edit/Main_file.xlsx','Sites')\n",
    "\n",
    "\n",
    "df_sites.rename(columns={'Site':'Station_id'}, inplace = True)\n",
    "\n",
    "df_sample = df_sites\n",
    "\n",
    "\n",
    "\n",
    "import ipywidgets as widgets\n",
    "from ipywidgets import interact, interact_manual\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "ALL = 'ALL'\n",
    "def unique_sorted_values_plus_ALL(array):\n",
    "    unique = array.unique().tolist()\n",
    "    unique.sort()\n",
    "    unique.insert(0, ALL)\n",
    "    return unique"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "886b84996ad1420a8b3126c8a5d4b01f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Dropdown(options=('ALL', 'DAE3', 'DAO1', 'DAO2', 'DAR1', 'DAS1', 'DAT1', 'DAT2', 'DAT3', 'DAU1', 'DAU2', 'DBA2â€¦"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "95828775b2f9470393229297c3d9a8f2",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Output()"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "\n",
    "dropdown_DS = widgets.Dropdown(options = unique_sorted_values_plus_ALL(df_sample.Station_id))\n",
    "\n",
    "output_DS = widgets.Output()\n",
    "\n",
    "\n",
    "def dropdown_DS_eventhandler(change): \n",
    "   \n",
    "        output_DS.clear_output(wait = True)\n",
    "        \n",
    "        with output_DS:\n",
    "\n",
    "                if (change.new == ALL):\n",
    "                                  display(df_sample)\n",
    "                else:\n",
    "                                  display(df_sample[df_sample.Station_id == change.new])\n",
    "\n",
    "\n",
    "dropdown_DS.observe(dropdown_DS_eventhandler, names='value')\n",
    "\n",
    "display(dropdown_DS)\n",
    "display(output_DS)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
